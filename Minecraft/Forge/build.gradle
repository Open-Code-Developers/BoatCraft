allprojects {
	
	apply plugin: 'forge'
	
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	
	minecraft {
		version = '1.7.2-10.12.0.1024'
		mcpVersion = '9.03'
	}
	
	// this sets our output jar to have a 'tag' of 'universal' on it
	// It also adds the minecraft version in a custom version name
	// The result is files named <projectname>-<mcversion>-<version>-universal.jar
	jar {
		classifier = 'universal'
		version = "${project.minecraft.version}-${project.version}"
	}
	
	// Add in a source jar for people, should they desire to download such a thing
	task sourceJar(type: Jar) {
		dependsOn subprojects.build
		from allprojects.sourceSets.main.allSource
		classifier = 'src'
		version = "${project.minecraft.version}-${project.version}"
	}
	
	// Add in an mcp named jar, for those who wish to run in a development environment (assuming mcp naming matches)
	task deobfJar(type: Jar) {
		dependsOn subprojects.build
		from allprojects.sourceSets.main.output
		classifier = 'deobf'
		version = "${project.minecraft.version}-${project.version}"
	}
	
	// Add in a jar containing the ScalaDocs.
	task docs(type: Jar) {
		dependsOn ':scaladoc'
		from scaladoc.destinationDir
		classifier = 'docs'
		version = "${project.minecraft.version}-${project.version}"
	}
	
	// Tell the artifact system about our extra jars
	artifacts {
		archives sourceJar, deobfJar, docs
	}
	
	// Configure an upload task.
	uploadArchives {
		dependsOn 'reobf'
		repositories {
			if (project.hasProperty("filesmaven")) {
				logger.info('Publishing to files server')
	
				mavenDeployer {
					configuration = configurations.deployJars
	
					repository(url: project.filesmaven.url) {
						authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
					}
	
					// This is just the pom data for the maven repo
					pom {
						groupId = project.group
						// Force the maven upload to use the <mcversion>-<version> syntax preferred at files
						version = "${project.minecraft.version}-${project.version}"
						artifactId = project.archivesBaseName
						project {
							name project.archivesBaseName
							packaging 'jar'
							description 'Rails had their turn, now out to the Minecraftian seas.'
							url 'https://github.com/Open-Code-Developers/BoatCraft.git'
	
							scm {
								url 'https://github.com/Open-Code-Developers/BoatCraft'
								connection 'scm:git:git://github.com/Open-Code-Developers/BoatCraft.git'
								developerConnection 'scm:git:git@github.com:Open-Code-Developers/BoatCraft.git'
							}
	
							issueManagement {
								system 'github'
								url 'https://github.com/Open-Code-Developers/BoatCraft/issues'
							}
	
							licenses {
								license {
									name 'The MIT License (MIT)'
									url 'https://raw.github.com/Open-Code-Developers/BoatCraft/master/LICENSE'
									distribution 'repo'
								}
							}
	
							developers {
								developer {
									id 'k2b6s9j'
									name 'Kepler Sticka-Jones'
									roles {
										role 'developer'
										role 'creator'
									}
								}
								developer {
									id 'viliml'
									name 'Vilim Lendvaj'
									roles { role 'developer' }
								}
							}
						}
					}
				}
			} else {
				logger.info('Publishing to repo folder')
	
				mavenDeployer {
					pom.version = "${project.minecraft.version}-${project.version}"
					repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
				}
			}
		}
	}
}